from pages import *
from setup import *
import os


class TestSuite:

    @classmethod
    def setup_class(cls):
        """
        Тут описывается что происходит ПЕРЕД запуском всех тестов.
        Сейчас тут описан драйвер, а также подготовка окна браузера и
        переход на нужную ссылку.
        """
        cls.driver = webdriver.Chrome("C:\Python34\Scripts\chromedriver.exe")
        cls.driver.maximize_window()
        cls.driver.get(Links.main_page)

    @classmethod
    def teardown_class(cls):
        """
        Тут описывается что происходит ПОСЛЕ запуском всех тестов.
        Сейчас тут просто убивается драйвер после прогона.
        """
        cls.driver.quit()

    def test_login(self):
        """
        Любой тест должен начинаться с test_
        """
        data = load_data("logpas")

        p = LoginPage(self.driver)
        p.username(data["username"])
        p.password(data["password"])
        p.lot()
        p.select_date("Январь", 2017)
        p.click_by_name("Войти")

    def test_payslip(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["documentation"])
        n.click_menu_section(data["menu"]["secondLevel"]["structure"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.click_list_my(data["employeeData"]["ListName1"])
        n.click_list_my(data["employeeData"]["ListName2"])
        n.click_list_my(data["employeeData"]["ListName3"])
        n.click_list_my(data["employeeData"]["ListName4"])
        n.click_by_name("Включить в список")
        sleep(3)
        n.click_by_name("Да", True)
        sleep(3)
        n.click_by_name("Да", True)
        n.wait_for_loading()
        sleep(3)
        n.click_by_name("Печать отчетных форм по списку")
        n.click_by_name("Расчетный листок", True)
        sleep(3)
        n.click_by_name("Да", True)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["payslip"])
        self.driver.get(Links.main_page)

    def test_payroll(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["documentation"])
        n.click_menu_section(data["menu"]["secondLevel"]["structure"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.click_list_my(data["employeeData"]["ListName1"])
        n.click_list_my(data["employeeData"]["ListName2"])
        n.click_list_my(data["employeeData"]["ListName3"])
        n.click_list_my(data["employeeData"]["ListName4"])
        n.click_by_name("Включить в список")
        sleep(3)
        n.click_by_name("Да", True)
        sleep(3)
        n.click_by_name("Да", True)
        n.wait_for_loading()
        sleep(3)
        n.click_by_name("Печать отчетных форм по списку")
        n.click_by_name("Расчетная ведомость", True)
        sleep(3)
        n.click_by_name("Сохранить", True)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["payroll"])
        self.driver.get(Links.main_page)

    def test_payroll_ut51(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["documentation"])
        n.click_menu_section(data["menu"]["secondLevel"]["structure"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.click_list_my(data["employeeData"]["ListName1"])
        n.click_list_my(data["employeeData"]["ListName2"])
        n.click_list_my(data["employeeData"]["ListName3"])
        n.click_list_my(data["employeeData"]["ListName4"])
        n.click_by_name("Включить в список")
        n.wait_for_loading()
        n.click_by_name("Да", True)
        n.wait_for_loading()
        n.click_by_name("Да", True)
        n.wait_for_loading()
        sleep(3)
        n.click_by_name("Печать отчетных форм по списку")
        n.click_by_name("Расчетная ведомость (форма №т-51)", True)
        n.click_by_name("Нет", True)
        n.wait_for_loading()
        n.click_by_name("Нет", True)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["payrollUT51"])
        self.driver.get(Links.main_page)

    def test_payment_аnd_settlement(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["documentation"])
        n.click_menu_section(data["menu"]["secondLevel"]["structure"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.click_list_my(data["employeeData"]["ListName1"])
        n.click_list_my(data["employeeData"]["ListName2"])
        n.click_list_my(data["employeeData"]["ListName3"])
        n.click_list_my(data["employeeData"]["ListName4"])
        n.click_by_name("Включить в список")
        n.wait_for_loading()
        n.click_by_name("Да", True)
        n.wait_for_loading()
        n.click_by_name("Да", True)
        n.wait_for_loading()
        sleep(3)
        n.click_by_name("Печать отчетных форм по списку")
        n.click_by_name("Платежно-расчетная ведомость по инструкции №70н", True)
        n.wait_for_loading()
        n.set_value(ReportsEmployeeLocators.numberStatements, "1458")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.cashDeskPayS, "01.02.2017")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.cashDeskPayPo, "28.02.2017 ")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.dateOfReport, "28.02.2017 ")
        n.wait_for_loading()
        n.set_checkbox(ReportsEmployeeLocators.includePaidSalary, True)
        n.wait_for_loading()
        n.click_by_name("Сохранить", True)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["paymentAndSettlementInstructions70"])
        self.driver.get(Links.main_page)

    def test_debt_comparison(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["documentation"])
        n.click_menu_section(data["menu"]["secondLevel"]["structure"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.click_list_my(data["employeeData"]["ListName1"])
        n.click_list_my(data["employeeData"]["ListName2"])
        n.click_list_my(data["employeeData"]["ListName3"])
        n.click_list_my(data["employeeData"]["ListName4"])
        n.click_by_name("Включить в список")
        n.wait_for_loading()
        n.click_by_name("Да", True)
        n.wait_for_loading()
        n.click_by_name("Да", True)
        n.wait_for_loading()
        sleep(3)
        n.click_by_name("Печать отчетных форм по списку")
        n.click_by_name("Сравнение долга", True)
        n.wait_for_loading()
        n.set_checkbox(ReportsEmployeeLocators.archiveDebtComparison, True)
        n.wait_for_loading()
        n.click_by_name("Сохранить", True)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["debtComparison"])
        self.driver.get(Links.main_page)

    def test_alimony_bank(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["documentation"])
        n.click_menu_section(data["menu"]["secondLevel"]["structure"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.click_list_my(data["employeeData"]["ListName1"])
        n.click_list_my(data["employeeData"]["ListName2"])
        n.click_list_my(data["employeeData"]["ListName3"])
        n.click_list_my(data["employeeData"]["ListName4"])
        n.click_by_name("Включить в список")
        n.wait_for_loading()
        n.click_by_name("Да", True)
        n.wait_for_loading()
        n.click_by_name("Да", True)
        n.wait_for_loading()
        sleep(3)
        n.click_by_name("Печать отчетных форм по списку")
        n.click_by_name("Алименты (банк)", True)
        n.wait_for_loading()
        n.set_select("Через банк")
        n.wait_for_loading()
        n.click_by_name("Сохранить", True)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["alimonyBank"])
        self.driver.get(Links.main_page)

    def test_alimony_mail(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["documentation"])
        n.click_menu_section(data["menu"]["secondLevel"]["structure"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.click_list_my(data["employeeData"]["ListName1"])
        n.click_list_my(data["employeeData"]["ListName2"])
        n.click_list_my(data["employeeData"]["ListName3"])
        n.click_list_my(data["employeeData"]["ListName4"])
        n.click_by_name("Включить в список")
        n.wait_for_loading()
        n.click_by_name("Да", True)
        n.wait_for_loading()
        n.click_by_name("Да", True)
        n.wait_for_loading()
        sleep(3)
        n.click_by_name("Печать отчетных форм по списку")
        n.click_by_name("Алименты (почта)", True)
        n.wait_for_loading()
        n.set_select("Почтой")
        n.wait_for_loading()
        n.click_by_name("Сохранить", True)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["alimonyMail"])
        self.driver.get(Links.main_page)

    def test_allocation_bank(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["documentation"])
        n.click_menu_section(data["menu"]["secondLevel"]["structure"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.click_list_my(data["employeeData"]["ListName1"])
        n.click_list_my(data["employeeData"]["ListName2"])
        n.click_list_my(data["employeeData"]["ListName3"])
        n.click_list_my(data["employeeData"]["ListName4"])
        n.click_by_name("Включить в список")
        n.wait_for_loading()
        n.click_by_name("Да", True)
        n.wait_for_loading()
        n.click_by_name("Да", True)
        n.wait_for_loading()
        sleep(3)
        n.click_by_name("Печать отчетных форм по списку")
        n.click_by_name("Перечисл. в СБ", True)
        n.wait_for_loading()
        n.set_checkbox(ReportsEmployeeLocators.allocationBank, True)
        n.wait_for_loading()
        n.click_by_name("Сохранить", True)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["allocationBank"])
        self.driver.get(Links.main_page)

    def test_list_of_receipts(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["documentation"])
        n.click_menu_section(data["menu"]["secondLevel"]["structure"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.click_list_my(data["employeeData"]["ListName1"])
        n.click_list_my(data["employeeData"]["ListName2"])
        n.click_list_my(data["employeeData"]["ListName3"])
        n.click_list_my(data["employeeData"]["ListName4"])
        n.click_by_name("Включить в список")
        n.wait_for_loading()
        n.click_by_name("Да", True)
        n.wait_for_loading()
        n.click_by_name("Да", True)
        n.wait_for_loading()
        sleep(3)
        n.click_by_name("Печать отчетных форм по списку")
        n.click_by_name("Список прих/орд", True)
        sleep(15)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["listOfReceipts"])
        self.driver.get(Links.main_page)

    def test_ex_sheets_other_than_alimony(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["documentation"])
        n.click_menu_section(data["menu"]["secondLevel"]["structure"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.click_list_my(data["employeeData"]["ListName1"])
        n.click_list_my(data["employeeData"]["ListName2"])
        n.click_list_my(data["employeeData"]["ListName3"])
        n.click_list_my(data["employeeData"]["ListName4"])
        n.click_by_name("Включить в список")
        n.wait_for_loading()
        n.click_by_name("Да", True)
        n.wait_for_loading()
        n.click_by_name("Да", True)
        n.wait_for_loading()
        sleep(3)
        n.click_by_name("Печать отчетных форм по списку")
        n.click_by_name("Исполнительные листы кроме алиментов", True)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["exSheetsOtherThanAlimony"])
        self.driver.get(Links.main_page)

    def test_costs_of_ESN_and_injuries(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["documentation"])
        n.click_menu_section(data["menu"]["secondLevel"]["structure"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.click_list_my(data["employeeData"]["ListName1"])
        n.click_list_my(data["employeeData"]["ListName2"])
        n.click_list_my(data["employeeData"]["ListName3"])
        n.click_list_my(data["employeeData"]["ListName4"])
        n.click_by_name("Включить в список")
        n.wait_for_loading()
        n.click_by_name("Да", True)
        n.wait_for_loading()
        n.click_by_name("Да", True)
        n.wait_for_loading()
        sleep(3)
        n.click_by_name("Печать отчетных форм по списку")
        n.click_by_name("Затраты по ЕСН и травматизму", True)
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.beginCostsOfESN, "0117 ")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.endCostsOfESN, "1217 ")
        n.wait_for_loading()
        n.click_by_name("Сохранить", True)
        n.file_inspect(data["reportFile"]["costsOfESNAndInjuries"])
        self.driver.get(Links.main_page)

    def test_charges_for_ESN_and_injuries(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["documentation"])
        n.click_menu_section(data["menu"]["secondLevel"]["structure"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.click_list_my(data["employeeData"]["ListName1"])
        n.click_list_my(data["employeeData"]["ListName2"])
        n.click_list_my(data["employeeData"]["ListName3"])
        n.click_list_my(data["employeeData"]["ListName4"])
        n.click_by_name("Включить в список")
        n.wait_for_loading()
        n.click_by_name("Да", True)
        n.wait_for_loading()
        n.click_by_name("Да", True)
        n.wait_for_loading()
        sleep(3)
        n.click_by_name("Печать отчетных форм по списку")
        n.click_by_name("Начисления по ЕСН и травматизму", True)
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.beginChargesForESN, "0117 ")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.endChargesForESN, "1217 ")
        n.wait_for_loading()
        n.click_by_name("Сохранить", True)
        n.file_inspect(data["reportFile"]["ChargesForESNAndInjuries"])
        self.driver.get(Links.main_page)

    def test_facial_card_list(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["documentation"])
        n.click_menu_section(data["menu"]["secondLevel"]["structure"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.click_list_my(data["employeeData"]["ListName1"])
        n.click_list_my(data["employeeData"]["ListName2"])
        n.click_list_my(data["employeeData"]["ListName3"])
        n.click_list_my(data["employeeData"]["ListName4"])
        n.click_by_name("Включить в список")
        n.wait_for_loading()
        n.click_by_name("Да", True)
        n.wait_for_loading()
        n.click_by_name("Да", True)
        n.wait_for_loading()
        sleep(3)
        n.click_by_name("Печать отчетных форм по списку")
        n.click_by_name("Лицевая карточка списком", True)
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.facialCardListYear, "2017 ")
        n.wait_for_loading()
        n.set_checkbox(ReportsEmployeeLocators.CountOnArchives, True)
        n.wait_for_loading()
        n.set_checkbox(ReportsEmployeeLocators.AccountForRecalculations, True)
        n.wait_for_loading()
        n.set_checkbox(ReportsEmployeeLocators.hospital_leaveForPayment, True)
        n.wait_for_loading()
        n.click_by_name("Сохранить", True)
        n.wait_for_loading()
        n.click_by_name("Да", True)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["facialCardList"])
        self.driver.get(Links.main_page)

    def test_inquiry_GNI2_NDFL_list(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["documentation"])
        n.click_menu_section(data["menu"]["secondLevel"]["structure"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.click_list_my(data["employeeData"]["ListName1"])
        n.click_list_my(data["employeeData"]["ListName2"])
        n.click_list_my(data["employeeData"]["ListName3"])
        n.click_by_name("Включить в список")
        n.wait_for_loading()
        n.click_by_name("Да", True)
        n.wait_for_loading()
        n.click_by_name("Да", True)
        n.wait_for_loading()
        sleep(3)
        n.click_by_name("Печать отчетных форм по списку")
        n.click_by_name("Справка в ГНИ (2-НДФЛ)  списком", True)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["inquiryGNI2_NDFL_list"])
        self.driver.get(Links.main_page)

    def test_tax_register_list(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["documentation"])
        n.click_menu_section(data["menu"]["secondLevel"]["structure"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.click_list_my(data["employeeData"]["ListName1"])
        n.click_list_my(data["employeeData"]["ListName2"])
        n.click_list_my(data["employeeData"]["ListName3"])
        n.click_list_my(data["employeeData"]["ListName4"])
        n.click_by_name("Включить в список")
        n.wait_for_loading()
        n.click_by_name("Да", True)
        n.wait_for_loading()
        n.click_by_name("Да", True)
        n.wait_for_loading()
        sleep(3)
        n.click_by_name("Печать отчетных форм по списку")
        n.click_by_name("Налоговый регистр (1-НДФЛ)  списком", True)
        n.wait_for_loading()
        n.click_by_name("Да", True)
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.taxRegisterListDate, "31.01.2017 ")
        n.wait_for_loading()
        n.click_by_name("Сохранить", True)
        n.wait_for_loading()
        sleep(5)
        n.file_inspect(data["reportFile"]["taxRegisterList"])
        self.driver.get(Links.main_page)

    def test_individual_card_list(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["documentation"])
        n.click_menu_section(data["menu"]["secondLevel"]["structure"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.click_list_my(data["employeeData"]["ListName1"])
        n.click_list_my(data["employeeData"]["ListName2"])
        n.click_list_my(data["employeeData"]["ListName3"])
        n.click_list_my(data["employeeData"]["ListName4"])
        n.click_by_name("Включить в список")
        n.wait_for_loading()
        n.click_by_name("Да", True)
        n.wait_for_loading()
        n.click_by_name("Да", True)
        n.wait_for_loading()
        sleep(3)
        n.click_by_name("Печать отчетных форм по списку")
        n.click_by_name("Индивидуальная карточка по страховым взносам списком в файл", True)
        n.wait_for_loading()
        n.click_by_name("Да", True)
        n.wait_for_loading()
        sleep(10)
        n.file_inspect(data["reportFile"]["IndividualCardList"])
        self.driver.get(Links.main_page)

    def test_settlement_payroll52n(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["documentation"])
        n.click_menu_section(data["menu"]["secondLevel"]["structure"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.click_list_my(data["employeeData"]["ListName1"])
        n.click_list_my(data["employeeData"]["ListName2"])
        n.click_list_my(data["employeeData"]["ListName3"])
        n.click_list_my(data["employeeData"]["ListName4"])
        n.click_by_name("Включить в список")
        n.wait_for_loading()
        n.click_by_name("Да", True)
        n.wait_for_loading()
        n.click_by_name("Да", True)
        n.wait_for_loading()
        sleep(3)
        n.click_by_name("Печать отчетных форм по списку")
        n.click_by_name("Расчетно-платежная ведомость (инструкция №52н)", True)
        n.wait_for_loading()
        n.set_value(ReportsEmployeeLocators.numberSetPayroll52n, "34567")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.paymentOnTimeFromSetPayroll52n, "01.02.2017")
        n.wait_for_loading()
        n.set_checkbox(ReportsEmployeeLocators.archivesSetPayroll52n, True)
        n.wait_for_loading()
        n.click_by_name("Сохранить", True)
        sleep(5)
        n.file_inspect(data["reportFile"]["settlementPayroll52n"])
        self.driver.get(Links.main_page)

    def test_typical_account(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["documentation"])
        n.click_menu_section(data["menu"]["secondLevel"]["structure"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.click_list_my(data["employeeData"]["ListName1"])
        n.click_list_my(data["employeeData"]["ListName2"])
        n.click_list_my(data["employeeData"]["ListName3"])
        n.click_list_my(data["employeeData"]["ListName4"])
        n.click_by_name("Включить в список")
        n.wait_for_loading()
        n.click_by_name("Да", True)
        n.wait_for_loading()
        n.click_by_name("Да", True)
        n.wait_for_loading()
        sleep(3)
        n.click_by_name("Печать отчетных форм по списку")
        n.click_by_name("Типовой лицевой счет", True)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["typicalAccount"])
        self.driver.get(Links.main_page)

    def test_List_by_preset_hold(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('Список по заданному удержанию')
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_type(ReportsEmployeeLocators.holdCode, 'Алименты')
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.beginListByPresetHold, "0116")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.endListByPresetHold, "1216")
        n.wait_for_loading()
        n.set_checkbox(ReportsEmployeeLocators. archivesListByPresetHold, True)
        n.wait_for_loading()
        n.set_checkbox(ReportsEmployeeLocators.sortByLastName, True)
        n.wait_for_loading()
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["listByPresetHold"])
        self.driver.get(Links.main_page)

    def test_settlemen_of_payroll(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('Свод расчетных ведомостей')
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_select('По группе должностей')
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.beginSettOfPayroll, "0117")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.endSettOfPayroll, "0117")
        n.wait_for_loading()
        n.set_checkbox(ReportsEmployeeLocators.chargingByMonthSettOfPayroll, True)
        n.wait_for_loading()
        n.set_checkbox(ReportsEmployeeLocators.holidaysByMonthSettOfPayroll, True)
        n.wait_for_loading()
        n.set_checkbox(ReportsEmployeeLocators.archivesSettOfPayroll, True)
        n.wait_for_loading()
        n.set_checkbox(ReportsEmployeeLocators.ExpandSettOfPayroll, True)
        n.wait_for_loading()
        n.set_checkbox(ReportsEmployeeLocators.newSVODSettOfPayroll, True)
        n.wait_for_loading()
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["settlemenOfPayroll"])
        self.driver.get(Links.main_page)

    def test_memorial_order_short(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('JPR')     # Мемориальный ордер краткий
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_select('Рубли')
        n.set_select('без ограничений')
        n.set_select('По дебетовому счету')
        n.select_check_by_name('Структурированный справочник групп учета', True)
        n.select_check_by_name('С учетом корректирующих проводок', True)
        n.select_check_by_name('Развернуть по операциям', True)
        n.select_check_by_name('Разделять по финансированию', True)
        n.select_val_by_name('Номер м/о', '6')
        n.set_type(ReportsEmployeeLocators.buchInvoice, '0 193 02')
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["memorialOrderShort"])
        self.driver.get(Links.main_page)

    def test_list_employees_specified_char(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('SSN')     # Список сотрудников с заданным начислением
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_select('  1   Должностной оклад*')
        n.set_select('Сбербанк')
        n.set_date(ReportsEmployeeLocators.beginSSN, "0117")
        n.set_date(ReportsEmployeeLocators.endSSN, "0317")
        n.select_check_by_name('По архивам', True)
        n.select_check_by_name('Не учитывать дни пустых сумм', True)
        n.select_check_by_name('Плановые значения(ок/тар/надб)', False)
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["ListEmployeesSpecifiedChar"])
        self.driver.get(Links.main_page)

    def te1st_report_SH2(self):    # вывести в отдельный юнит
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('SH2')     # Штатное расписание
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_type(ReportsEmployeeLocators.gropSH2, "71")
        n.select_check_by_name('Сортировать в отчете', True)
        n.select_check_by_name('Для вакансий оклад по должности', True)
        n.click_by_name("Сохранить", True)
        n.wait_for_loading()
        sleep(20)
        n.file_inspect(data["reportFile"]["SH2"])
        self.driver.get(Links.main_page)

    def test_report_SH5(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('SH5')     # Отчет - Структура и штатная численность
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.select_check_by_name('Сортировать по NPP', True)
        n.set_date(ReportsEmployeeLocators.dateReportSH5, "31.12.2016")
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["SH5"])
        self.driver.get(Links.main_page)

    def te1st_report_SH2ASP(self):     # вывести в отдельный юнит
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('SH2ASP')     # Отчет для СП на основе данных из Штатного Расписания
        n.wait_for_loading()
        n.click_by_name("Напечатать")

        n.wait_for_loading()
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        sleep(480)
        n.file_inspect(data["reportFile"]["SH2ASP"])
        self.driver.get(Links.main_page)

    def test_report_SVN(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('SVN')     # Свод расчетных ведомостей по сотрудникам
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.set_select('Начисления')
        n.set_date(ReportsEmployeeLocators.beginSVN, "0116")
        n.set_date(ReportsEmployeeLocators.endSVN, "1216")
        n.set_type(ReportsEmployeeLocators.gropSVN, "71")
        n.select_check_by_name('По архивам', True)
        n.select_check_by_name('Учитывать перерасчеты', True)
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["SVN"])
        self.driver.get(Links.main_page)

    def test_report_SV_E11(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('Сводная ведомость по зарплате')     # Сводная ведомость по зарплате
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.select_check_by_name('По архивам', True)
        n.select_check_by_name('Нач.по мес.', True)
        n.select_check_by_name('Отп.по мес.', True)
        n.select_check_by_name('Развернуть п/н', True)
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["SV_E11"])
        self.driver.get(Links.main_page)

    def test_report_SPSHR(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('SPSHR')     # Структура и штатная численность аудиторов СП
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["SPSHR"])
        self.driver.get(Links.main_page)

    def test_report_CHIS_SP(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('CHIS_SP')     # Фактическая численность на начало и конец месяца (СП)
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["CHIS_SP"])
        self.driver.get(Links.main_page)

    def test_report_SVED_SP(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('SVED_SP')     # Сведения о ср.числ., ср.мес. ЗП и соотношении высших и главных должн.(СП)
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.beginSVED_SP, "0117")
        n.set_date(ReportsEmployeeLocators.endSVED_SP, "0217")
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["SVED_SP"])
        self.driver.get(Links.main_page)

    def test_report_SP_VAC(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('SP_VAC')     # Справка по вакансиям аппарата Счетной палаты РФ
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.dateSP_VAC, "31.01.2017")
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["SP_VAC"])
        self.driver.get(Links.main_page)

    def test_report_KRS_P(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('KRS_P')     # Справка по фактическим расходам по подразделениям (СП)
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.beginKRS_P, "0117")
        n.set_date(ReportsEmployeeLocators.endKRS_P, "0117")
        n.set_select('0 - все сотрудники')
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["KRS_P"])
        self.driver.get(Links.main_page)

    def test_report_PESN15(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('PESN15')     # Протокол расчета страховых взносов с 2015 года
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.datePESN15, "0117")
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["PESN15"])
        self.driver.get(Links.main_page)

    def test_report_SVD_DDGS(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('SVD_DDGS')     # Свод по категориям и должностям (СП)
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.beginSVD_DDGS, "0117")
        n.set_date(ReportsEmployeeLocators.endSVD_DDGS, "0217")
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["SVD_DDGS"])
        self.driver.get(Links.main_page)

    def test_report_MON_SP(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('MON_SP')     # Мониторинг фонда оплаты труда (СП)
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.beginMON_SP, "0117")
        n.set_date(ReportsEmployeeLocators.endMON_SP, "0217")
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["MON_SP"])
        self.driver.get(Links.main_page)

    def te1st_report_SRV(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('SRV')     # Реестр возвратов
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["SRV"])
        self.driver.get(Links.main_page)

    def test_report_OT_VICH(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('OT_VICH')     # Сумма налоговых вычетов
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.beginOT_VICH, "1216")
        n.set_date(ReportsEmployeeLocators.endOT_VICH, "1216")
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["OT_VICH"])
        self.driver.get(Links.main_page)

    def test_report_TST_ZKRZ(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('TST_ZKRZ')     # Проверка корректности расчета з/платы перед закрытием месяца
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["TST_ZKRZ"])
        self.driver.get(Links.main_page)

    def test_report_JURV(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('JURV')     # Журнал учета рабочего времени
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.beginJURV, "0116")
        n.set_date(ReportsEmployeeLocators.endJURV, "1216")
        n.wait_for_loading()
        n.set_type(ReportsEmployeeLocators.unitJURV, '28137')
        n.set_type(ReportsEmployeeLocators.workerJURV, 'Мешалкина')
        n.wait_for_loading()
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["JURV"])
        self.driver.get(Links.main_page)

    def test_report_OKN(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('OKN')     # Список сотрудников с окладом и надбавками
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.select_check_by_name('Сортировать по фамилии', True)
        n.select_check_by_name('Скрыть уволенных:', True)
        n.select_check_by_name('Округлять в большую сторону?', True)
        n.select_check_by_name('Выводить общую сумму?', True)
        n.set_type(ReportsEmployeeLocators.unitOKN, '72')
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["OKN"])
        self.driver.get(Links.main_page)

    def test_report_DD1(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('DD1')     # Список сотрудников по группе должностей
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.select_check_by_name('Сортировать по фамилии', True)
        n.set_type(ReportsEmployeeLocators.unitDD1, 'Специалисты старшие')
        n.set_select('Без военнослужащих')
        sleep(2)
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["DD1"])
        self.driver.get(Links.main_page)

    def test_report_NDP(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('NDP')     # Справка о недоплатах сотрудникам
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["NDP"])
        self.driver.get(Links.main_page)

    def test_report_S21(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('S21')     # Затраты по ЕСН и травматизму
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.beginS21, "0116")
        n.set_date(ReportsEmployeeLocators.endS21, "1216")
        n.set_type(ReportsEmployeeLocators.codePFS21, 'ПФ (ЕСН)')
        n.wait_for_loading()
        n.click_by_name("Сохранить", False, 2)
        n.file_inspect(data["reportFile"]["S21"])
        self.driver.get(Links.main_page)

    def test_report_S23(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('S23')     # Начисления по ЕСН и травматизму
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.beginS23, "0116")
        n.set_date(ReportsEmployeeLocators.endS23, "1216")
        n.wait_for_loading()
        n.click_by_name("Сохранить", False, 2)
        n.file_inspect(data["reportFile"]["S23"])
        self.driver.get(Links.main_page)

    def te1st_report_SGR(self): # нет печатной формы
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('SGR')     # Список сотрудников по группе подразделений и группе начислений
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.click_by_name("Нет", True)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["SGR"])
        self.driver.get(Links.main_page)

    def test_report_INC(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('INC')     # Лицевая карточка сотрудника
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.select_val_by_name('Год расчетов','2016')
        n.select_check_by_name('Считать по архивам', True)
        n.select_check_by_name('Отпуска/больничные по мес.выплаты', True)
        n.set_type(ReportsEmployeeLocators.workerINC, 'Горбачев')
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["INC"])
        self.driver.get(Links.main_page)

    def test_report_NVG(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('NVG')     # Реестр платежных ведомостей
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.beginNVG, "0117")
        n.set_date(ReportsEmployeeLocators.endNVG, "0217")
        n.select_check_by_name('Оплаченные', True)
        n.set_select('Сбербанк')
        n.set_select('Зарплата')
        n.click_by_name("Сохранить", False, 2)
        n.file_inspect(data["reportFile"]["NVG"])
        self.driver.get(Links.main_page)

    def test_report_ALM_PER(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('ALM_PER')     # Справка по алиментам за период
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.beginALM_PER, "1216")
        n.set_date(ReportsEmployeeLocators.endALM_PER, "1216")
        n.select_check_by_name('По архивам', True)
        n.select_check_by_name('Группировать по сотруднику', True)
        n.select_check_by_name('Выводить почтовый сбор', False)
        n.set_select('Через банк')
        n.click_by_name("Сохранить", False, 2)
        n.file_inspect(data["reportFile"]["ALM_PER"])
        self.driver.get(Links.main_page)

    def test_report_SF14_05(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('SF14_05')     # Справка к форме 14 образца 2005 г.
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.dateSF14_05, "31.12.2016")
        n.select_check_by_name('Включить долю отп.и РК в ден.возн.', True)
        n.select_check_by_name('Включить долю отп.и РК в дол.окл.', True)
        n.select_check_by_name('Включить долю отп.и РК в ден.поощр.', True)
        n.select_check_by_name('Включить долю отп.и РК в надб.', True)
        n.select_check_by_name('Включить долю отп.и РК в премии', True)
        n.select_check_by_name('Включить долю РК в прочее', True)
        n.select_check_by_name('Печать по должн.гос.службы', True)
        n.set_select('Год')
        n.wait_for_loading()
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["SF14_05"])
        self.driver.get(Links.main_page)

    def test_report__formP4(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('Форма П-4')     # Форма П-4 для 2013 года
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.select_val_by_name('Год', '2016')
        n.select_val_by_name('Месяц', '12')
        Select(self.driver.find_element(By.XPATH, "(//select)[1]")).select_by_visible_text('Антонова Н.В.')
        n.set_type(ReportsEmployeeLocators.ResponsibleP4, 'Киселева Е.Н.')
        n.select_check_by_name('По архивам', True)
        n.select_check_by_name('Отпускные по мес, за котор.нач.', True)
        n.select_check_by_name('Суммы уволенных в 8 графу', True)
        sleep(3)
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.click_by_name("Нет", True)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["formP4"])
        self.driver.get(Links.main_page)

    def test_report__formP4_GR(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('P4_GR')     # Расшифровка ФОТ для формы П-4 по сотрудникам и начислениям
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.select_val_by_name('Год', '2017')
        n.select_val_by_name('Месяц', '01')
        Select(self.driver.find_element(By.XPATH, "(//select)[1]")).select_by_visible_text('Антонова Н.В.')
        Select(self.driver.find_element(By.XPATH, "(//select)[2]")).select_by_visible_text('Кручек Ирина Викторовна')
        n.select_check_by_name('По архивам', True)
        n.select_check_by_name('Отпускные по мес, за котор.нач.', True)
        n.select_check_by_name('Суммы уволенных в 8 графу', True)
        n.set_type(ReportsEmployeeLocators.gropP4_GR, '241') # P4_R отраб-е время
        sleep(3)
        n.click_by_name("Сохранить", False, 2)
        sleep(30)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["P4_GR"])
        self.driver.get(Links.main_page)

    def test_report__P4OTRCH(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('P4OTRCH')     # Расшифровка человеко-часов к форме П-4
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.select_val_by_name('Год', '2017')
        n.select_val_by_name('Месяц', '1')
        n.select_check_by_name('По архивам', True)
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["P4OTRCH"])
        self.driver.get(Links.main_page)

    def test_report__FSS_SBL(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('FSS_SBL')     # Список сотрудников с больничными для ФСС
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.beginFSS_SBL, "1216")
        n.set_date(ReportsEmployeeLocators.endFSS_SBL, "1216")
        n.set_type(ReportsEmployeeLocators.workerFSS_SBL, 'Антонова')
        n.select_check_by_name('По архивам', True)
        n.select_check_by_name('Группировать по подразделениям', True)
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["FSS_SBL"])
        self.driver.get(Links.main_page)

    def test_report__NOTAV(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('NOTAV')     # Список сотрудников без аванса
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["NOTAV"])
        self.driver.get(Links.main_page)

    def te1st_report__formT1DGS16(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('Форма 1-T(ГМС) 2016 г.')     # Форма 1-T(ГМС) 2016 г.
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.select_val_by_name('Год', '2016')
        n.select_val_by_name('Месяц', '12')
        Select(self.driver.find_element(By.XPATH, "(//select)[1]")).select_by_visible_text("Антонова Н.В.")
        sleep(3)
        Select(self.driver.find_element(By.XPATH, "(//select)[2]")).select_by_visible_text("Кручек Ирина Викторовна")
        sleep(3)
        # n.set_select('Антонова Н.В.')
        # n.set_select('Кручек Ирина Викторовна')
        n.select_check_by_name('По архивам', True)
        n.set_date(ReportsEmployeeLocators.dateT1DGS16, "24.03.2016")
        sleep(3)
        n.click_by_name("Сохранить", True)
        n.wait_for_loading()
        n.click_by_name("Нет", True)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["T1DGS16"])
        self.driver.get(Links.main_page)

    def te1st_report_formT1DGS12(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('Расшифровка по сотрудникам к форме 1-T(ГМС) 2012 г.')     #
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.select_val_by_name('Год', '2016')
        n.select_val_by_name('Месяц', '12')
        sleep(3)
        n.select_check_by_name('По архивам', True)
        #  n.set_date(ReportsEmployeeLocators.dateT1DGS12, "01.04.2017")
        sleep(3)
        n.click_by_name("Сохранить", True)
        sleep(20)
        n.click_by_name("Нет", True)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["T1DGS12"])
        self.driver.get(Links.main_page)

    def test_report_formSRZPDGS(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('SRZPDGS')     # Справка о средней з/п по должностям
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.select_val_by_name('Период с:', '0116')
        n.select_val_by_name('по', '1216')
        sleep(3)
        n.select_check_by_name('по архивам', True)
        n.select_check_by_name('Разбивать по подразделениям?', True)
        #  n.set_date(ReportsEmployeeLocators.dateT1DGS12, "01.04.2017")
        sleep(3)
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        sleep(100)
        n.file_inspect(data["reportFile"]["SRZPDGS"])
        self.driver.get(Links.main_page)

    def test_report_formFSS4_15_16(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('Расчетная ведомость ФСС 2016 года')     # Расчетная ведомость ФСС 2016 г.
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.dateFSS4_15_16, "31.12.2016")
        n.set_type(ReportsEmployeeLocators.codFSS4_15_16, 'Фонд ОМС 5.1%')
        n.set_type(ReportsEmployeeLocators.injuryAccrualsFSS4_15_16, 'Проф.риск 0.2%')
        n.select_val_by_name('Отчетный квартал (1-4)', '4')
        n.click_by_name("Сохранить", False, 2)
        sleep(20)
        n.wait_for_loading()
        n.click_by_name("Нет", True)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["FSS4_15_16"])
        self.driver.get(Links.main_page)

    def test_report_formFSS4_15(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('Расчетная ведомость ФСС 2015 года')     # Расчетная ведомость ФСС 2015 г.
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.dateFSS4_15_16, "31.12.2016")
        n.set_type(ReportsEmployeeLocators.codFSS4_15_16, 'Фонд ОМС 5.1%')
        n.set_type(ReportsEmployeeLocators.injuryAccrualsFSS4_15_16, 'Проф.риск 0.2%')
        n.select_val_by_name('Отчетный квартал (1-4)', '4')
        n.click_by_name("Сохранить", False, 2)
        sleep(20)
        n.wait_for_loading()
        n.click_by_name("Нет", True)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["FSS4_15"])
        self.driver.get(Links.main_page)

    def te1st_report_formSTR_PPP(self): # нет печатной формы
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('Список сотрудников с некорр.')
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_select('Банк')
        n.select_check_by_name('Сортировать по фамилии', True)
        n.select_check_by_name('Скрыть уволенных:', True)
        n.wait_for_loading()
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.click_by_name("Нет", True)
        n.wait_for_loading()

        n.file_inspect(data["reportFile"]["STR_PPP"])
        self.driver.get(Links.main_page)

    def test_report_form_SBL(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('Список сотp.с больничными.')
        # lines = self.driver.find_elements(By.XPATH, "//td[@class='w2ui-grid-data']")
        # for i in lines:
        #     if i.text == "Список сотp.с больничными":
        #         i.click()
        sleep(10)
        #self.driver.find_element(By.XPATH, "//input[@rel='search']").send_keys("123")
        #element = element.driver.find_element(By.XPATH, "(.//span[.='SBL'])")
        #element = self.driver.find_element(By.XPATH, "(//td[.='Поиск...'])")
        #element.click()
        # self.driver.find_element(By.XPATH, "//input[@rel='search']").send_keys("123")
        #sleep(2)
        #n.click_by_name("Поиск", True)
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.select_check_by_name('По архивам', True)
        n.set_type(ReportsEmployeeLocators.gropSBL, '28125')
        n.set_date(ReportsEmployeeLocators.beginSBL, "1116")
        n.set_date(ReportsEmployeeLocators.endSBL, "1216")
        n.wait_for_loading()
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["SBL"])
        self.driver.get(Links.main_page)

    def test_report_form_TSTp(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('TST')   # Список сотрудников с квартальной премией
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.select_check_by_name('Сортировать по фамилии', True)
        n.set_type(ReportsEmployeeLocators.codeTSTp, '78')
        n.wait_for_loading()
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["TSTp"])
        self.driver.get(Links.main_page)

    def test_report_form_SDT(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('SDT')   # Список сотрудников с начислением на дату
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.select_check_by_name('Сортировать по фамилии', True)
        n.set_date(ReportsEmployeeLocators.dateSDT, "01.11.2016")
        n.wait_for_loading()
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["SDT"])
        self.driver.get(Links.main_page)

    def test_report_form_OTP(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('OTP')   # Список отпускников
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.select_check_by_name('Начисленные суммы', True)
        n.set_type(ReportsEmployeeLocators.codOTP, "103")
        n.wait_for_loading()
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["OTP"])
        self.driver.get(Links.main_page)

    def test_report_form_TS1s(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('Перечисления в Сбербанк')   # TS1s
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.select_check_by_name('Сортировать по фамилии', True)
        n.select_check_by_name('По архивам', True)
        n.set_type(ReportsEmployeeLocators.codTS1s, "Алименты")
        n.set_date(ReportsEmployeeLocators.beginTS1s, "0116")
        n.set_date(ReportsEmployeeLocators.endTS1s, "1216")
        n.wait_for_loading()
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["TS1s"])
        self.driver.get(Links.main_page)

    def te1st_report_form_STR_STB(self): # Не работает
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('Перечисления в STB')   # Список сотрудников STB, не уволенных и не получавших з/п
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.select_check_by_name('Сортировать по фамилии', True)
        n.select_check_by_name('Скрыть уволенных:', True)
        n.set_select('Банк')
        n.wait_for_loading()
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["STR_STB"])
        self.driver.get(Links.main_page)

    def te1st_report_form_TS2(self): # не работает
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('TS2')   # Список сотр.с категорией и начислением
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.select_check_by_name('Сортировать по фамилии', True)
        n.set_select('Штатн.сотрудн(гражд)')
        n.wait_for_loading()
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["TS2"])
        self.driver.get(Links.main_page)

    def test_report_form_STR_inn(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('Список сотрудников с некорректными ИНН')
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.select_check_by_name('Сортировать по фамилии', True)
        n.select_check_by_name('Скрыть уволенных', True)
        n.set_select('Банк')
        n.set_type(ReportsEmployeeLocators.gropSTRinn, '28125')
        n.wait_for_loading()
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["STR_inn"])
        self.driver.get(Links.main_page)

    def test_report_form_TT5(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('TT5')                    #Сравнение долга по подразделению
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.select_check_by_name('По архивам', True)
        n.set_type(ReportsEmployeeLocators.gropTT5, '28125')
        n.wait_for_loading()
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["TT5"])
        self.driver.get(Links.main_page)

    def te1st_report_form_ISS(self):  # не работает
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('ISS')                    #Выплаты инвалидам (соцстрах)
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.select_check_by_name('Отключать записи без сумм?', True)
        n.select_val_by_name('Отчетный квартал (1-4)', '1')
        n.wait_for_loading()
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["ISS"])
        self.driver.get(Links.main_page)

    def test_report_form_I90(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('I90')                    # Выплаты инвалидам (травматизм)
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.select_check_by_name('Отключать без сумм', True)
        n.select_val_by_name('Отчетный квартал (1-4)', '1')
        n.wait_for_loading()
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["I90"])
        self.driver.get(Links.main_page)

    def test_report_form_KRS(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('KRS')                    # Справка по фактическим расходам
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.beginKRS, "01.01.2016")
        n.set_date(ReportsEmployeeLocators.endKRS, "31.12.16")
        n.wait_for_loading()
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["KRS"])
        self.driver.get(Links.main_page)

    def te1st_report_form_EK4(self):   # не работает
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('EK4')                    # Лицевой счет по ЕСН 2014 г.
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["EK4"])
        self.driver.get(Links.main_page)

    def test_report_form_T71(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('T71')                    # Сводная платежная ведомость
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_select('Платежная ведомость')
        n.set_select('Зарплата')
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["T71"])
        self.driver.get(Links.main_page)

    def test_report_form_T65(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('T65')                    # Регистрация платежных ведомостей
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_select('Сбербанк')
        n.set_select('Зарплата')
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["T65"])
        self.driver.get(Links.main_page)

    def test_report_form_NGR(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('NGR')                    # Справка о начислениях на з/п по группам учета
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.select_check_by_name('По архивам', True)
        n.set_date(ReportsEmployeeLocators.beginNGR, "1216")
        n.set_date(ReportsEmployeeLocators.endNGR, "1216")
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["NGR"])
        self.driver.get(Links.main_page)

    def test_report_form_NFF(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('NFF')                    # Справка о начислениях на з/п по финансированиям
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.select_check_by_name('По архивам', True)
        n.set_date(ReportsEmployeeLocators.beginNFF, "1216")
        n.set_date(ReportsEmployeeLocators.endNFF, "1216")
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["NFF"])
        self.driver.get(Links.main_page)

    def test_report_form_N_R(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('N_R')                    # Справка о начислениях на з/п по расходам
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.select_check_by_name('По архивам', True)
        n.set_date(ReportsEmployeeLocators.beginN_R, "1216")
        n.set_date(ReportsEmployeeLocators.endN_R, "1216")
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["N_R"])
        self.driver.get(Links.main_page)

    def test_report_formSH1(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('SH1')                    # Справка по должностям
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.select_check_by_name('Сортировать в отчете', True)
        n.set_date(ReportsEmployeeLocators.dateSH1, "31.01.2017")
        n.set_type(ReportsEmployeeLocators.gropSH1, '28125')
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["SH1"])
        self.driver.get(Links.main_page)

    def test_report_formSH3(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('SH3')                    # Сверка окладов
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.click_by_name("Да", True)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["SH3"])
        self.driver.get(Links.main_page)

    def te1st_report_formSH4(self):   # Не работает
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('SH4')                    # Сверка ставок
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.click_by_name("Да", True)
        n.wait_for_loading()
        sleep(60)
        n.file_inspect(data["reportFile"]["SH4"])
        self.driver.get(Links.main_page)

    def test_report_formTR1(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('TR1')                    # Свод по трудовым соглашениям
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.beginTR1, "0616")
        n.set_date(ReportsEmployeeLocators.endTR1, "1216")
        n.select_check_by_name('Укрупненно', True)
        n.wait_for_loading()
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["TR1"])
        self.driver.get(Links.main_page)

    def test_report_formVN1(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('VN1')                    # Выплаты внештатникам
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.beginVN1, "0616")
        n.set_date(ReportsEmployeeLocators.endVN1, "1216")
        n.wait_for_loading()
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["VN1"])
        self.driver.get(Links.main_page)

    def test_report_formRDC(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('RDC')                    # Реестр депонентских карточек за день
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.dateRDC, "01.01.2016")
        n.set_select('Невыплачен')
        n.set_select('Зарплата')
        n.wait_for_loading()
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["RDC"])
        self.driver.get(Links.main_page)

    def te1st_report_formSDP(self): # не работает
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('SDP')                    # Справка по депонентам за период
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.beginSDP, "01.01.2016")
        n.set_date(ReportsEmployeeLocators.endSDP, "31.12.2016")
        n.set_select('Выплачен')
        n.set_select('Зарплата')
        n.wait_for_loading()
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["SDP"])
        self.driver.get(Links.main_page)

    def test_report_formSP6(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('SP6')                    # Список сотрудников с заданным типом оплаты
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["SP6"])
        self.driver.get(Links.main_page)

    def test_report_formCMP(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('CMP')                    # Сравнение всех выплат
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.dateCMP, "1216")
        n.set_select('Сбербанк')
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["CMP"])
        self.driver.get(Links.main_page)

    def te1st_report_formDGG(self): # не работает
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('DGG')                    # Остаток или списание депонентов  на дату по группе
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.click_by_name("Да", True)
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.dateDGG, "31.12.2016")
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["DGG"])
        self.driver.get(Links.main_page)

    def te1st_report_formDGR(self): # не работает
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('DGR')                    # Справка по зарегистрированным депонентам за период по группам
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.beginDGR, "0116")
        n.set_date(ReportsEmployeeLocators.endDGR, "1216")
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["DGR"])
        self.driver.get(Links.main_page)

    def te1st_report_formDEG(self): # не работает
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('DEG')                    # Справка по выплаченным депонентам за месяц по группе
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.dateDEG, "0117")
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["DEG"])
        self.driver.get(Links.main_page)

    def test_report_formT75(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('T75')                    # Расшифровка выплаченных сумм по кассовым отчетам
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.dateT75, "0117")
        n.set_select('Зарплата')
        n.set_select('Банк')
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["T75"])
        self.driver.get(Links.main_page)

    def test_report_formRPL(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('RPL')                    # Реестр платежных поручений
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.beginRPL, "01.01.2016")
        n.set_date(ReportsEmployeeLocators.endRPL, "31.12.2016")
        n.set_select('Внешторгбанк')
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["RPL"])
        self.driver.get(Links.main_page)

    def test_report_form_SBK(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('SBK')               # Список сотрудников на выпуск электронных карт в банк
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["SBK"])
        self.driver.get(Links.main_page)

    def te1st_report_form_SH6(self):  # не работает
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('SH6')               # Штатное расписание (сокращенное)
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.select_check_by_name('Сортировать в отчете', True)
        n.select_check_by_name('Только вакансии', True)
        n.set_date(ReportsEmployeeLocators.dateSH6, "31.01.2017")
        n.set_type(ReportsEmployeeLocators.gropSH6, '71')
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["SH6"])
        self.driver.get(Links.main_page)

    def test_report_form_TSS(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('TSS')               # Список лиц, оформленных по договорам подряда
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.select_check_by_name('Сортировать по номеру договора', True)
        n.set_date(ReportsEmployeeLocators.beginTSS, "0116")
        n.set_date(ReportsEmployeeLocators.endTSS, "1216")
        n.set_type(ReportsEmployeeLocators.gropTSS, '71')
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["TSS"])
        self.driver.get(Links.main_page)

    def test_report_form_SBV(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('SBV')               # Ведомость на выдачу пластиковых карт
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["SBV"])
        self.driver.get(Links.main_page)

    def test_report_form_DSR(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('DSR')               # Список всех депонентов по сотруднику
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.beginDSR, "0116")
        n.set_date(ReportsEmployeeLocators.endDSR, "1216")
        n.set_type(ReportsEmployeeLocators.userDSR, 'Абдулина')
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["DSR"])
        self.driver.get(Links.main_page)

    def test_report_form_F441(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('F441')               # Книга учета депонентов
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.dateF441, "1216")
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["F441"])
        self.driver.get(Links.main_page)

    def test_report_form_F414(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('F414')               # Реестр депонентов
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.select_val_by_name('Номер реестра', '1')
        n.set_date(ReportsEmployeeLocators.dateF414, "27.10.2016")
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["F414"])
        self.driver.get(Links.main_page)

    def test_report_form_SP11(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('SP11')               # Список сотрудников по б/л в разрезе вида выплат
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_select('Сбербанк')
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["SP11"])
        self.driver.get(Links.main_page)

    def test_report_form_AVS(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('AVS')               # Список сотрудников с плановым авансом
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["AVS"])
        self.driver.get(Links.main_page)

    def test_report_form_TR2(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('TR2')               # Справка о расходовании фонда по договорам
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["TR2"])
        self.driver.get(Links.main_page)

    def te1st_report_form_SH7(self):  # не работает
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('SH7')  # Сводная и гл.сводная таблица штатного расписания
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.dateSH7, "31.12.2016")
        n.set_type(ReportsEmployeeLocators.gropSH7, '71')
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["SH7"])
        self.driver.get(Links.main_page)

    def test_report_form_R92(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('R92')               # Кол-во дней б/л (отчет по труду)
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.beginR92, "0116")
        n.set_date(ReportsEmployeeLocators.endR92, "1216")
        n.set_type(ReportsEmployeeLocators.gropR92, '71')
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["R92"])
        self.driver.get(Links.main_page)

    def test_report_form_OT1(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('OT1')               # Список отпускников (по всем отпускам за месяц)
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.select_check_by_name('По архивам', True)
        n.set_type(ReportsEmployeeLocators.gropOT1, '71')
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["OT1"])
        self.driver.get(Links.main_page)

    def test_report_form_R91(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('R91')               # Расходы по государственному социальному страхованию
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.select_check_by_name('Укрупненно', True)
        n.set_date(ReportsEmployeeLocators.beginR91, "01.01.2016")
        n.set_date(ReportsEmployeeLocators.endR91, "31.12.2016")
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["R91"])
        self.driver.get(Links.main_page)

    def te1st_report_form_SV_PN(self):# не работает
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('SV_PN')               # Выверка подоходного налога
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.select_check_by_name('По совок.доходу', True)
        n.set_date(ReportsEmployeeLocators.dateSV_PN, "1216")
        n.select_check_by_name('По архивам', True)
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["SV_PN"])
        self.driver.get(Links.main_page)

    def test_report_form_PSV_PN(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('PSV_PN')               # Выверка подоходного налога по подразделению
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.select_check_by_name('По совок.доходу', True)
        n.set_date(ReportsEmployeeLocators.datePSV_PN, "1216")
        n.set_type(ReportsEmployeeLocators.gropPSV_PN, '71')
        n.select_check_by_name('По архивам', True)
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["PSV_PN"])
        self.driver.get(Links.main_page)

    def test_report_form_BLN(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('BLN')               # Список сотрудников с больничными листами
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()

        n.set_type(ReportsEmployeeLocators.codBLN, 'Пособие по  врем.нетрудоспосп.')
        n.set_type(ReportsEmployeeLocators.gropBLN, '71')

        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["BLN"])
        self.driver.get(Links.main_page)

    def test_report_form_DFN(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('DFN')               # Расхождения  NACH и FSTN
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        sleep(10)

        n.file_inspect(data["reportFile"]["DFN"])
        self.driver.get(Links.main_page)

    def test_report_form_SNCH(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('SNCH')               # Начисления на з/п в разрезе всех аналитик
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        sleep(10)
        n.select_check_by_name('Структурированный справочник групп учета', True)
        n.select_check_by_name('По архивам', True)
        n.set_date(ReportsEmployeeLocators.beginSNCH, "1216")
        n.set_date(ReportsEmployeeLocators.endSNCH, "1216")
        n.click_by_name("Сохранить", False, 2)

        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["SNCH"])
        self.driver.get(Links.main_page)

    def te1st_report_form_R1100(self): # не работает
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('R1100')               # Расшифровка строк 1100 в отчете ЕСН
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.beginR1100, "1216")
        n.set_date(ReportsEmployeeLocators.endR1100, "1216")
        n.set_type(ReportsEmployeeLocators.codR1100, '1')
        n.click_by_name("Сохранить", False, 2)

        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["R1100"])
        self.driver.get(Links.main_page)

    def test_report_form_R91O(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('R91O')               # Расходы на соцстрах (полные)
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.beginR91O, "1216")
        n.set_date(ReportsEmployeeLocators.endR91O, "1216")
        n.set_type(ReportsEmployeeLocators.gropR91O, '71')
        n.set_type(ReportsEmployeeLocators.codR91O, '58')
        n.click_by_name("Сохранить", False, 2)

        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["R91O"])
        self.driver.get(Links.main_page)

    def test_report_form_PTK(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('PTK')               # Справка по группам начислений
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.beginPTK, "1216")
        n.set_date(ReportsEmployeeLocators.endPTK, "1216")
        n.set_type(ReportsEmployeeLocators.gropPTK, '71')
        n.click_by_name("Сохранить", False, 2)

        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["PTK"])
        self.driver.get(Links.main_page)

    def test_report_form_DBL(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('DBL')               # Справка по б/л и за свой счет
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.beginDBL, "1216")
        n.set_date(ReportsEmployeeLocators.endDBL, "1216")
        n.set_type(ReportsEmployeeLocators.gropDBL, '71')
        n.select_check_by_name('По архивам', True)
        n.click_by_name("Сохранить", False, 2)

        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["DBL"])
        self.driver.get(Links.main_page)

    def test_report_form_SPF(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('SPF')               # Список сотрудников с финансированием
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.dateSPF, "1216")
        n.set_type(ReportsEmployeeLocators.gropFinSPF, '305 0106 939 0059 111')
        n.select_check_by_name('По архивам', True)
        n.click_by_name("Сохранить", False, 2)

        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["SPF"])
        self.driver.get(Links.main_page)

    def test_report_form_SCP(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('SCP')               # Справка для счетной палаты
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["SCP"])
        self.driver.get(Links.main_page)


    def te1st_report_form_CPNF(self): # не работает
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('CPNF')               # Сверка п/н с п/н по финансированию
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.dateCPNF, "1216")
        n.select_check_by_name('По архивам', True)
        n.click_by_name("Сохранить", False, 2)

        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["CPNF"])
        self.driver.get(Links.main_page)

    def test_report_form_VR1(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('VR1')             # Выверочная форма (по таблице NAD) по группе учета и финансированию в начислениях
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.beginVR1, "0616")
        n.set_date(ReportsEmployeeLocators.endVR1, "1216")
        n.set_type(ReportsEmployeeLocators.gropVR1, '71')
        n.select_check_by_name('По архивам', True)
        n.set_select('По финансированию')
        n.click_by_name("Сохранить", False, 2)

        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["VR1"])
        self.driver.get(Links.main_page)

    def test_report_form_BLNFZ(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('BLNFZ')             # Разбивка б/л по финансированию/затратам из средств ФСС
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.beginBLNFZ, "0116")
        n.set_date(ReportsEmployeeLocators.endBLNFZ, "1216")
        n.select_check_by_name('По архивам', True)
        n.click_by_name("Сохранить", False, 2)

        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["BLNFZ"])
        self.driver.get(Links.main_page)

    def te1st_report_form_SVSD(self): # не работает
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('SVSD')             # Сверка финансирования ведомостей с подразделениями
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.beginSVSD, "01.01.2016")
        n.set_date(ReportsEmployeeLocators.endSVSD, "31.12.2016")
        n.set_select('Банк')
        n.set_select('Зарплата')
        n.click_by_name("Сохранить", False, 2)

        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["SVSD"])
        self.driver.get(Links.main_page)

    def te1st_report_form_UT53(self): # не работает
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('UT53')             # Журнал регистрации платежных ведомостей
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_select('Сбербанк')
        n.set_date(ReportsEmployeeLocators.beginUT53, "01.01.17")
        n.set_date(ReportsEmployeeLocators.endUT53, "28.02.17")
        n.set_date(ReportsEmployeeLocators.beginmonthUT53, "0117")
        n.set_date(ReportsEmployeeLocators.endmonthUT53, "0217")
        n.click_by_name("Сохранить", False, 2)

        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["UT53"])
        self.driver.get(Links.main_page)

    def te1st_report_form_PODQ(self):  # не работает
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('PODQ')             # Справка по подоходному налогу
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.datePODQ, "1216")
        n.set_type(ReportsEmployeeLocators.gropPODQ, '71')
        n.select_check_by_name('По архивам', True)
        n.click_by_name("Сохранить", False, 2)

        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["PODQ"])
        self.driver.get(Links.main_page)

    def test_report_form_ITOG_PF(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('ITOG_PF')             # Справка по подоходному налогу
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["ITOG_PF"])
        self.driver.get(Links.main_page)

    def test_report_form_JON_OKUD(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('Журнал операций ОКУД 0504071')             # Журнал операций ОКУД 0504071
        n.wait_for_loading()
        n.click_by_name("Напечатать")

        n.wait_for_loading()
        n.set_type(ReportsEmployeeLocators.analit1JON_OKUD, '7')
        n.set_type(ReportsEmployeeLocators.analit2JON_OKUD, '10')
        n.set_type(ReportsEmployeeLocators.analit3JON_OKUD, '20')
        n.select_check_by_name('Вывод оборотов в ГК по-старому', True)
        n.select_check_by_name('Cальдо только по счетам тек.ЖО', True)
        n.set_select('без ограничений')
        n.set_select('Рубли')
        n.set_select('Балансовые')
        n.set_date(ReportsEmployeeLocators.beginJON_OKUD, "01.01.17")
        n.set_date(ReportsEmployeeLocators.endJON_OKUD, "28.02.17")
        n.select_val_by_name('Номер Ж/О', '6')
        n.click_by_name("Сохранить", False, 2)

        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["JON_OKUD"])
        self.driver.get(Links.main_page)

    def test_report_form_FETS(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('FETS')             # Распределение численности и ФОТ по ЕТС
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_type(ReportsEmployeeLocators.gropFETS, '71')
        n.select_check_by_name('По архивам', True)
        n.select_val_by_name('Год отчета', '2016')
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["FETS"])
        self.driver.get(Links.main_page)

    def test_report_form_SR_CH(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('SR_CH')             # Среднесписочная численность работников за предшествующий  календарный год (ФНС)
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.dateSR_CH, '25.12.2016')
        n.select_check_by_name('По архивам', True)
        n.select_val_by_name('Год', '2016')
        n.select_val_by_name('Месяц', '12')
        n.set_select('Центральный округ')
        n.wait_for_loading()
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.click_by_name("Да", True)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["SR_CH"])
        self.driver.get(Links.main_page)

    def test_report_form_SPR_PER(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('SPR_PER')             # Список сотрудников с перерасчетами
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()

        n.select_check_by_name('По архивам', True)
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["SPR_PER"])
        self.driver.get(Links.main_page)



    def test_report_form_SRSP14(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('SRSP14')             # Расшифровка среднесписочной к справке к форме 14
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.dateSRSP14, '25.12.2016')
        n.set_select('Год')
        n.set_select('Специалисты старшие')
        n.wait_for_loading()
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["SRSP14"])
        self.driver.get(Links.main_page)

    def test_report_form_DBL_LG(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('DBL_LG')             # Список сотрудников имеющих двойные вычеты
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.select_val_by_name('Год ( с 2011)', '2016')
        n.wait_for_loading()
        n.click_by_name("Сохранить", False, 2)

        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["DBL_LG"])
        self.driver.get(Links.main_page)

    def test_report_form_NSGD(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('NSGD')             # Начисленные суммы по сотрудникам по группе должностей
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.beginNSGD, "0916")
        n.set_date(ReportsEmployeeLocators.endNSGD, "1216")
        n.set_type(ReportsEmployeeLocators.gropNSGD, '10')
        n.wait_for_loading()
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["NSGD"])
        self.driver.get(Links.main_page)

    def test_report_form_PFQ_OTR(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('PFQ_OTR')             # Список сотрудников с отрицательными суммами начислений за период (ПФР)
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.select_val_by_name('Год', '2016')
        n.select_val_by_name('Квартал', '4')
        n.wait_for_loading()
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["PFQ_OTR"])
        self.driver.get(Links.main_page)

    def test_report_form_KOR_P14(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('KOR_P14')   # Список сотрудников с доплатами в корректирующих пачках представленных в отчетном периоде
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.dateKOR_P14, "1016")
        n.wait_for_loading()
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["KOR_P14"])
        self.driver.get(Links.main_page)

    def test_report_form_NOT_KNU(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('NOT_KNU')   # Список сотрудников с доплатами в корректирующих пачках представленных в отчетном периоде
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.dateNOT_KNU, "0616")
        n.set_type(ReportsEmployeeLocators.kodNOT_KNU, '1')
        n.wait_for_loading()
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["NOT_KNU"])
        self.driver.get(Links.main_page)

    def test_report_form_SRDN_GS(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('SRDN_GS')   # Отчет о средней з/п по группе должностей
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.beginSRDN_GS, "01.10.16")
        n.set_date(ReportsEmployeeLocators.endSRDN_GS, "31.12.16")
        n.set_type(ReportsEmployeeLocators.gropSRDN_GS, '71')
        n.set_select('ГОСУДАРСТВЕННЫЕ ДОЛЖНОСТИ КАТЕГОРИИ "В" ВЫСШИЕ')
        n.wait_for_loading()
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["SRDN_GS"])
        self.driver.get(Links.main_page)

    def test_report_form_SB_UVOLN(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('SB_UVOLN')   # Список уволенных сотрудников для СБ (паспортные данные)
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.beginSB_UVOLN, "01.10.16")
        n.set_date(ReportsEmployeeLocators.endSB_UVOLN, "31.12.16")
        n.set_select('Сбербанк')
        n.wait_for_loading()
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["SB_UVOLN"])
        self.driver.get(Links.main_page)

    def test_report_form_S44_15(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('Распределение числ.работн.по размерам з.п. начиная за апрель 2015 года (Росстат)')   #
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.select_val_by_name('Среднесп.числ. из П-4', '1023')
        n.select_val_by_name('ФЗП из П-4', '900000')
        n.wait_for_loading()
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["S44_15"])
        self.driver.get(Links.main_page)

    def test_report_form_S44_17(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('Распределение числ.работн.по размерам з.п. начиная за апрель 2017 года (Росстат)')   #
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.select_val_by_name('Среднесп.числ. из П-4', '1023')
        n.select_val_by_name('ФЗП из П-4', '900000')
        n.wait_for_loading()
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["S44_17"])
        self.driver.get(Links.main_page)


    def test_report_form_SKID_MP(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('SKID_MP')   # Необлагаемые суммы матпомощи
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.beginSKID_MP, "0616")
        n.set_date(ReportsEmployeeLocators.endSKID_MP, "1216")
        n.wait_for_loading()
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["SKID_MP"])
        self.driver.get(Links.main_page)

    def test_report_form_T57T(self):  # Статистическая форма 57-Т(октябрь 2013г.)
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('T57T')   # Статистическая форма 57-Т(октябрь 2013г.)
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.montT57T, "1216")
        n.set_date(ReportsEmployeeLocators.dateT57T, "31.12.2016")
        Select(self.driver.find_element(By.XPATH, "(//select)[4]")).select_by_visible_text('Антонова Н.В.')
        Select(self.driver.find_element(By.XPATH, "(//select)[5]")).select_by_visible_text('Кручек Ирина Викторовна')
        n.wait_for_loading()
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["T57T"])
        self.driver.get(Links.main_page)

    def test_report_form_SH8(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('SH8')   # Свод по штатному расписанию
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.beginSH8, "1216")
        n.set_date(ReportsEmployeeLocators.endSH8, "1216")
        n.select_check_by_name('по архивам ', True)
        n.select_check_by_name('По категориям затрат', True)
        n.set_select('A - По всем начислениям')
        n.wait_for_loading()
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["SH8"])
        self.driver.get(Links.main_page)

    def test_report_form_SNP(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('SNP')   # Структура и численность по направлениям (Штатное расписание)
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_type(ReportsEmployeeLocators.gropSNP, '71')
        n.select_check_by_name('Печатать факт', True)

        n.wait_for_loading()
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["SNP"])
        self.driver.get(Links.main_page)

    def te1st_report_form_P_TBL(self): # не работает
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('P_TBL')   # Табель по подразделению
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.dateP_TBL, "1216")
        n.set_type(ReportsEmployeeLocators.gropP_TBL, '71')
        n.wait_for_loading()
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["P_TBL"])
        self.driver.get(Links.main_page)

    def test_report_form_SVR(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('SVR')   # Справка о начислениях по категориям персонала
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.beginSVR, "0616")
        n.set_date(ReportsEmployeeLocators.endSVR, "1216")
        n.wait_for_loading()
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["SVR"])
        self.driver.get(Links.main_page)

    def test_report_form_SV_EK4(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('SV_EK4')   # Сводная карточка ЕСН на основании индви. Карточки ЕСН.
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["SV_EK4"])
        self.driver.get(Links.main_page)

    def test_report_form_TSTGOTP(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('TSTGOTP')   # Проверка корректности заведенных отпусков
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.dateTSTGOTP, "1216")
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["TSTGOTP"])
        self.driver.get(Links.main_page)

    def test_report_form_SP_DLT(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('SP_DLT')   # Задолженность на конец месяца
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.dateSP_DLT, "1216")
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["SP_DLT"])
        self.driver.get(Links.main_page)

    def test_report_form_SPRF14(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('SPRF14')   # Справка к 14 форме
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.beginSPRF14, "0616")
        n.set_date(ReportsEmployeeLocators.endSPRF14, "1216")
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["SPRF14"])
        self.driver.get(Links.main_page)

    def test_report_form_SPD1(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('SPD')   # Список сотрудников с долж. по подразделению
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_type(ReportsEmployeeLocators.gropSPD1, '71')
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["SPD1"])
        self.driver.get(Links.main_page)

    def test_report_form_SPD2(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('Список сотрудников с должн. по подразделению (Денежное содержание)')   #
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_type(ReportsEmployeeLocators.gropSPD2, '71')
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["SPD2"])
        self.driver.get(Links.main_page)

    def test_report_form_SPD3(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('Список сотрудников с должн. по подразделению (Должностной оклад)')   #
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_type(ReportsEmployeeLocators.gropSPD3, '71')
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["SPD3"])
        self.driver.get(Links.main_page)

    def test_report_form_SPD4(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('Список сотрудников с должн. по подразделению (Оклад денежного содержания)')   #
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_type(ReportsEmployeeLocators.gropSPD4, '71')
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["SPD4"])
        self.driver.get(Links.main_page)

    def test_report_form_SRZDOLSP(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('SRZDOLSP')   # Средний заработок по должностям за период (СП)
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.beginSRZDOLSP, "1216")
        n.set_date(ReportsEmployeeLocators.endSRZDOLSP, "1216")
        n.select_check_by_name('Проверять и заполнять табель', True)
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["SRZDOLSP"])
        self.driver.get(Links.main_page)

    def te1st_report_form_EL3(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('EL3')  # Лицевой счет по ЕСН
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()

        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["EL3"])
        self.driver.get(Links.main_page)

    def test_report_form_SBUV(self):
        data = load_data("menu")

        n = MenuPage(self.driver)
        n.wait_for_loading()
        n.click_button_menu()
        n.click_menu_section(data["menu"]["firstLevel"]["reports"])
        n.click_menu_section(data["menu"]["secondLevel"]["PrintingForms"])
        data = load_data("employee")
        n = BasePage(self.driver)
        n.wait_for_loading()
        n.search('SBUV')   # Список уволенных сотрудников за период по типу оплаты
        n.wait_for_loading()
        n.click_by_name("Напечатать")
        n.wait_for_loading()
        n.set_date(ReportsEmployeeLocators.beginSBUV, "01.12.16")
        n.set_date(ReportsEmployeeLocators.endSBUV, "31.12.16")
        n.set_type(ReportsEmployeeLocators.paymentMethodSBUV, 'Сбербанк')
        n.wait_for_loading()
        n.click_by_name("Сохранить", False, 2)
        n.wait_for_loading()
        n.file_inspect(data["reportFile"]["SBUV"])
        self.driver.get(Links.main_page)
